{"version":3,"sources":["assets/img/Logo.png","assets/img/backgroundImage2.jpg","components/Grid/index.js","Auth.js","pages/Landing/Landing.js","components/Forms/index.js","utils/API.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/PatientList/index.js","components/PatientHandler/index.js","pages/Patients/Patients.js","utils/CustomHooks.js","utils/PatientContext.js","components/GeneralInfo/index.js","components/HealthCard/index.js","components/Conditions/index.js","components/Medications/index.js","components/NewContact/index.js","components/Contacts/index.js","pages/EHR/EHR.js","pages/Contacts/Contacts.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","src_Auth","Auth","Object","classCallCheck","this","authenticated","cb","Landing","style","background","Grid_Container","Grid_Row","Grid_Col","logo","src","require","alt","isAuthenticated","react_router_dom","to","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","float","Input","props","assign","TextArea","Button","Messenger","msg","color","LoggerBtn","btnType","Forms_Button","type","apiKey","process","REACT_APP_API_KEY","API","fetchPatient","axios","get","fetchPatients","email","addPatient","data","post","removePatient","delete","updateEHR","patch","getUser","then","register","credentials","login","getConditionNames","search","fetchCondition","getMedNames","fetchMeds","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","_useState3","_useState4","errorMsg","setErrorMsg","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","text","Forms_Messenger","onSubmit","preventDefault","reset","status","push","localStorage","setItem","catch","err","setTimeout","Forms_Input","onChange","placeholder","Forms_LoggerBtn","margin","textShadow","SignUp","timeoutMsg","res","statusText","error","errors","PatientList","patient","context","removeState","confirmRemoval","remove","index","patientData","healthData","_id","firstName","nickname","removable","onClick","bind","textDecoration","toggleBtn","pathname","state","patientId","border","backgroundColor","PatientHandler","toggleRemoveState","confirmed","cancel","react","Patients","setContext","patients","setPatients","setRemoveState","_useState5","_useState6","isConfirmed","useEffect","getPatients","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getUser","user","_yield$API$fetchPatie","wrap","_context","prev","next","sent","stop","apply","arguments","_callee2","_context2","_x","togglePatientAsRemovable","clone","toConsumableArray","i","key","reduce","acc","cur","useForceUpdate","setValue","createContext","GeneralInfo","editState","toggleState","formSubmit","input","lastName","addressOne","addressTwo","city","window","innerWidth","zip","country","phone","updtBtn","fieldText","fontStyle","fontWeight","padding","borderBottom","transition","HealthCard","bloodType","gender","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","getDate","dob","defaultValue","insurance","insNumber","rxBin","rxPcn","Forms_TextArea","allergies","immunizations","notes","Conditions","areaTarget","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","renderEditConditions","conditions","sort","b","createdAt","condition","edit","editBtn","littleEditBtn","description","rows","textarea","removeBtn","addBtn","autoComplete","resize","marginTop","focus","Medications","addDoses","otherDosage","doseChoices","littlePointBtn","onBlur","doses","includes","dose","renderDoses","med","medication","dosage","meds","renderMeds","NewContact","cancelBtn","saveBtn","Contacts","newContact","toggleNew","newTarget","formatPhoneNumberLink","number","replace","contact","office","primaryPhone","primaryExt","secondaryPhone","secondaryExt","fax","website","display","href","rel","nextContact","getNewContact","EHR","location","_useContext","useContext","PatientContext","setPatient","generalInfo","setGeneralInfo","healthInfo","setHealthInfo","_useState7","_useState8","setConditions","_useState9","_useState10","setMeds","_useState11","_useState12","contacts","setContacts","_useState13","_useState14","medInput","setMedInput","_useState15","_useState16","setNewContact","_useState17","_useState18","addContact","setAddContact","_useState19","_useState20","editGenState","setGenState","_useState21","_useState22","editHealthState","setHealthState","_useState23","_useState24","editConditState","setConditState","_useState25","_useState26","editMedsState","setMedsState","_useState27","_useState28","conditSuggestions","setConditSuggestions","_useState29","_useState30","medSuggestions","setMedSuggestions","_useState31","_useState32","setDoses","_useState33","_useState34","query","setQuery","forceUpdate","isInitialMount","useRef","current","getPatient","updateDB","newPatient","healthConditions","medications","_yield$API$addPatient","console","log","setNameInNavbar","onConditInputChange","_callee3","items","suggestions","regex","_context3","RegExp","filter","x","test","timeThisOut","clearTimeout","onMedInputChange","_ref5","_callee4","_e$target4","_context4","slice","t0","abrupt","_x2","addCondition","_ref6","_callee5","_text$split","_text$split2","_yield$API$fetchCondi","_yield$API$fetchCondi2","suggest","newCondition","_context5","shortdef","capitalizeWord","now","_x3","word","char","toUpperCase","_ref7","_callee6","_yield$API$getConditi","_context6","_x4","_ref8","_callee7","_yield$API$getMedName","displayTermsList","_context7","term","_x5","selectSuggestedCondit","_ref9","_callee8","_value$split","_value$split2","_yield$API$fetchCondi3","_yield$API$fetchCondi4","_context8","_x6","selectSuggestedMed","_ref10","_callee9","_yield$API$fetchMeds","drugGroup","_doses","_context9","conceptGroup","conceptProperties","_ref11","synonym","_x7","_ref12","_callee10","_yield$API$fetchMeds2","_doses2","_context10","_ref13","_x8","_e$target2","arr","splice","newDescription","suggestion","newMed","_e$target5","hasOwnProperty","_e$target3","list","navBar","navLinks","showNavLinks","useLocation","logout","data-toggle","data-target","Grid_Collapse","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","Provider","setPatientContext","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3c9e00ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.76d8cd68.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.f82817c2.jpg\";","import React from 'react'\n\n\nexport const Container = ({ classes, children }) => <div className={classes ? `container ${classes}`: 'container'}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={classes ? `row ${classes}`: 'row'}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => ( \n        <div \n            className={size.split(' ').map( size => `col-${size}`).join(' ')+\" \"+ classes || ''}>{children}\n        </div>\n    )\n    \n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from '../../components/Grid';\nimport Auth from '../../Auth';\n\nexport default function Landing() {\n\n    return (\n        <div\n            style={background}\n        >\n            <Container>\n                <Row>\n                    <Col size={'md-8'} classes={'offset-md-2'}>\n                        <div className=\"jumbotron mt-5\">\n                                 <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                            <h1 className=\"display-4\"><em>My</em> EHR</h1>\n                            <p className=\"lead\">All the medical records you need in one, simple place.</p>\n                            <hr className=\"my-4\" />\n                       {!Auth.isAuthenticated() ?\n                            <Link to=\"/signup\" className=\"btn btn-primary btn-lg\">Get Started</Link> :\n                            <Link to=\"/patients\" className=\"btn btn-primary btn-lg\">Get Started</Link> \n                       }\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    float: 'right'\n}","import React from 'react'\n\n\nexport const Input = props => <input className=\"form-control\" {...props} />\n\n  \nexport const TextArea = props =>  <textarea className=\"form-control\" {...props} />\n    \n\nexport const Button = props => <button {...props} >{props.children}</button>\n\n\nexport const Messenger = ({ msg, color }) => <p style={{color: color}}>{msg}</p>\n\n\nexport const LoggerBtn = ({ btnType }) => { \n    return (\n      <Button className={'btn btn-primary btn-lg btn-block'} \n      type=\"submit\">\n        {btnType}\n      </Button>\n    )\n}\n","import axios from \"axios\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    fetchPatient: id => axios.get(`/api/patients/${id}`),\n\n    fetchPatients: email => axios.get(\"/api/patients/load\", email),\n\n    addPatient: data => axios.post(\"/api/patients/add\", data),\n\n    removePatient: id => axios.delete(`/api/patients/${id}`),\n\n    updateEHR: (id, data) => axios.patch(`/api/patients/${id}`, data),\n\n    getUser: () => axios.get('/api/users').then(data => data),\n\n    register: credentials =>  axios.post('api/users/register', credentials),\n  \n    login: credentials => axios.post('/api/users/login', credentials),\n/*\n    External APIs\n*/ \n    getConditionNames: search => axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`),\n    \n    fetchCondition: search => axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`),\n\n    getMedNames: () => axios.get('https://rxnav.nlm.nih.gov/REST/displaynames'),\n\n    fetchMeds: search => axios.get(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${search}`)\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input, Messenger } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n        [errorMsg, setErrorMsg] = useState(''),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n    },\n\n        authorize = () => {\n            Auth.login(() => {\n                history.push(\"/patients\")\n            })\n    },\n\n        timeoutMsg = () => {\n            const clearMsg = () => setErrorMsg('')\n            setTimeout(clearMsg, 3500);\n    },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n\n            API.login(credentials)\n                .then(({ data }) => {\n                    if (data.status === 'success') {\n                        authorize()\n                        localStorage.setItem('userEmail', data.email)\n                    }\n                }).catch( err => {\n                    setErrorMsg('Login failed.  Please try again.')\n                    timeoutMsg()\n                })\n    }\n\n    return (\n        <div\n            style={background}\n        >\n\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={'md-12'} classes='box-shadow sign' >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img \n                                style={logo} \n                                src={require('../../assets/img/Logo.png')} \n                                alt={'Logo'} />\n                                Log-in to your account\n                            </h5>\n                        </div>\n                    </Row> \n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n                            <LoggerBtn btnType={'log in'} />\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n\n        </div>\n    )\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: \"15px\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"../../components/Grid\";\nimport { LoggerBtn, Input, Messenger } from \"../../components/Forms\";\nimport API from \"../../utils/API\";\nimport Auth from \"../../Auth\";\n\nexport default function SignUp() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n        [errorMsg, setErrorMsg] = useState(''),\n\n\n    onInputChange = e => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    },\n\n    authorize = () => {\n        Auth.login(() => {\n            history.push(\"/patients\");\n        });\n    },\n\n    timeoutMsg = () => {\n        const clearMsg = () => setErrorMsg('')\n        setTimeout(clearMsg, 3500);\n    },\n\n    handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        try {\n            API.register(credentials)\n                .then( res => {\n                    if (res.statusText === 'OK') {\n                        if (res.data.error){\n                            setErrorMsg(res.data.error)\n                            timeoutMsg()\n                        } else if (res.data.errors) {\n                            setErrorMsg('A valid email and password are required')\n                            timeoutMsg()\n                        } else {\n                        API.login(credentials)\n                            .then(({ data }) => {\n                                if (data.status === 'success') {\n                                    authorize()\n                                }\n                            })\n                        }\n                    }\n                })\n                setCredentials('')\n        } catch (err) { \n            setErrorMsg('Signup failed. Please try again.')\n            timeoutMsg() }\n    }\n    return (\n        <div\n            style={background}\n        >\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={\"md-12\"} classes={\"box-shadow sign\"}>\n                    <Row >\n                        <div className={\"mt-5\"}>\n                            <h5 style={text}>\n                                <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                                Create your account\n                            </h5>\n                        </div>\n                    </Row>\n\n                    <div className=\"text-center err-msg\">\n                    <Messenger msg={errorMsg} color='#d9534f' />\n                    </div>\n\n                    <Row>\n                        <form onSubmit={handleSubmit} className={\"card-body\"}>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"E-mail address\"\n                                />\n                            </div>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n\n                            <LoggerBtn btnType={\"Sign Up\"} />\n                        </form>\n                    </Row>\n                    <Row classes={\"justify-content-center\"}>\n                        <p>\n                            Already have an account?\n                            <Link to=\"/SignIn\"> Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\nconst  background = {\n    backgroundImage: `url(${require(\"../../assets/img/backgroundImage2.jpg\")}`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    margin: '15px'\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from '../Grid';\n\nexport function PatientList({ patient, context, removeState, confirmRemoval, remove, index }) {\n\tconst { patientData, healthData, _id } = patient;\n\n\t//keeping invalid or corrupt data away from the EHR page.\n\tif (!patientData || !healthData) {\n\t\treturn <div />;\n\t}\n\tconst { firstName, nickname } = patientData;\n\n\tlet name;\n\tif (firstName || nickname) {\n\t\tname = nickname && nickname !== '' ? nickname : firstName;\n\t} else {\n\t\tname = '';\n\t}\n\n\tif (removeState) {\n\t\tif (patient.removable) {\n\t\t\treturn (\n\t\t\t\t<div className={'patient-remove'}>\n\t\t\t\t\t<Link to=\"/patients\" onClick={remove.bind(null, _id)} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t\t\t\t<div className=\"card-body text-center btn btn-outline-danger\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col size={'md-4'}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user-times fa-4x rm-lg-user\" />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col size={'md-8'}>\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Please Confirm</h2>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t\tThis will remove {name !== '' ? name : 'this patient'} from your list.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={'patient-remove'}>\n\t\t\t\t\t<Link to=\"/patients\" onClick={confirmRemoval.bind(null, index)} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col size={'md-2'} />\n\t\t\t\t\t\t\t\t\t<Col size={'md-8'}>\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Remove {name === '' ? 'this patient' : name}</h2>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t\t\tDelete {name !== '' ? name : 'this patient'} from your patient list?\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col size={'md-2'}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user-times fa-2x rm-sm-user\" style={toggleBtn} />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\treturn (\n\t\t<Link\n\t\t\tto={{\n\t\t\t\tpathname: '/ehr',\n\t\t\t\tstate: { patientId: _id, name }\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tcontext({ patientId: _id, name });\n\t\t\t}} //set patientContext as universal variable.\n\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t>\n\t\t\t<div className=\"card box-shadow mt-5\">\n\t\t\t\t<div className=\"card-body text-center\">\n\t\t\t\t\t<h2 className=\"card-title\">{name === '' ? 'name this patient' : name}</h2>\n\t\t\t\t\t<p className=\"card-text\">Access {name !== '' ? name : 'this patient'}'s information here.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nconst toggleBtn = {\n\tfloat: 'right',\n\tborder: 'none',\n\tmargin: '0',\n\tcolor: 'white',\n\tbackgroundColor: 'white'\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../../components/Forms';\n\nexport function PatientHandler({ removeState, toggleRemoveState, confirmed, cancel }) {\n  \n\tif (removeState) {\n\t\tif (confirmed) {\n\t\t\treturn (\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={removeState ? { float: 'left', color: 'tomato' } : { float: 'left' }}\n\t\t\t\t\t\tonClick={cancel}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-hand-point-right\" /> last chance to cancel\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={removeState ? { float: 'left', color: 'tomato' } : { float: 'left' }}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleRemoveState(!removeState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-ban\" /> Cancel\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={'add'}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/ehr',\n\t\t\t\t\t\t\tstate: { patientId: '' }\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"btn plus\"\n\t\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-user-plus\" /> New Patient\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className={'remove'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"btn minus\"\n\t\t\t\t\t\tstyle={{ float: 'left' }}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttoggleRemoveState(!removeState);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-user-minus\" /> Remove Patients\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { PatientList } from '../../components/PatientList'; \nimport { PatientHandler }  from '../../components/PatientHandler'; \nimport API from \"../../utils/API\";\n\n\nexport default function Patients({ setContext }) {\n\n    const [ patients, setPatients ] = useState([]),\n      [ removeState, setRemoveState ] = useState(false),\n      [ confirmed, isConfirmed ] = useState(false);\n\n    useEffect(() => {\n        getPatients()\n    }, [])\n\n    const getPatients = async () => {\n\n        const { data: user } = await API.getUser(),\n          { data } = await API.fetchPatients(user);\n\n        setPatients(data);\n    },\n\n    removePatient = async _id => {\n\n       await API.removePatient(_id)\n       setRemoveState(false)\n       getPatients();\n    },\n\n    togglePatientAsRemovable = index => {\n        const clone = [...patients];\n        \n        clone[index].removable = !clone[index].removable\n        \n        isConfirmed(true)\n        setPatients(clone)\n    },\n\n    cancelPatientRemoval = () => {        \n        const clone = patients.reduce((acc, cur) => {\n            cur.removable = false\n            acc.push(cur)\n            return acc\n        }, [])\n        isConfirmed(false)\n        setRemoveState(false)\n        setPatients(clone)\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    {\n                        patients.map( (patient, i) => \n                            <PatientList \n                            patient={patient} \n                            index={i} \n                            context={setContext}  \n                            removeState={removeState}\n                            confirmRemoval={togglePatientAsRemovable}\n                            remove={removePatient}\n                            key={patient._id} \n                            />)\n                    }\n                    <PatientHandler \n                        removeState={removeState}\n                        confirmed={confirmed}\n                        cancel={cancelPatientRemoval}\n                        toggleRemoveState={() => {setRemoveState(!removeState)}} \n                        />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef } from 'react';\n\n\n//used track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef();\n\n        useEffect(() => {\n        ref.current = value;\n        }, [value]);\n\n    return ref.current;\n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}","import { createContext } from 'react';\n\nexport default createContext({\n    patientId: '',\n    name: ''\n})\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function GeneralInfo({ data, target, editState, toggleState, formSubmit, name }) {\n\nif (editState) {\n    return (\n        <div className={'my-5'}>\n        <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Contact Information:</h5></em>\n        \n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" \n                style={{ ...toggleBtn, color: \"#d9534f\" }} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data ? data.firstName : ''} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data ? data.lastName : ''} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data ? data.nickname : ''} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data ? data.addressOne : ''} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data ? data.addressTwo : ''} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data ? data.city : ''} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                        <Input value={data ? data.state : ''} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data ? data.zip : ''} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data ? data.country : ''} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data ? data.phone : ''} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data ? data.email : ''} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'my-5 gen-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Contact Information:</h5></em>\n\n                <Col size={'md-12'} classes={'mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit, name }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n\n          if(age !== age) return '??'\n            \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     getBloodTypes = bloodType => {\n    \n        const types = ['Select', 'Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( (type, i) => type === bloodType ? <option key={i} value={bloodType} defaultValue>{bloodType}</option> : <option key={i}>{type}</option>)\n     },\n\n     getGenders = gender => {\n    \n        const types = ['Select', 'Male', 'Female', 'Transgender Male', 'Transgender Female']\n    \n    return types.map( (type, i) => type === gender ? <option key={i} value={gender} defaultValue>{gender}</option> : <option key={i}>{type}</option>)\n     }; \n    \nif (editState) {\n    return (\n        <div className={'my-5'}>\n            <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" style={{...toggleBtn, color: \"#d9534f\"}} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                    <label>Gender</label>\n                        <select name=\"gender\" className=\"form-control\"\n                        style={input}\n                        onChange={target} >\n                            {getGenders(data.gender)}    \n                        </select>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select name=\"bloodType\" className=\"form-control\"\n                        style={input} \n                        onChange={target} >\n                            {getBloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rxPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'my-5 health-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n                <Col size={'md-12'} classes={'gen-edit mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Gender:</label>\n                        <div style={fieldText}>{data.gender}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\nexport function Conditions({\n\tdata,\n\tname,\n\ttarget,\n\tareaTarget,\n\teditState,\n\ttoggleState,\n\tformSubmit,\n\trenderSuggestions,\n\tremove,\n\ttext,\n\ttoggleDescState,\n\teditDescState\n}) {\n\t\n\tconst getRowHeight = (text) => (text.length > 250 ? text.length / 80 : 3),\n\n\t\trenderConditions = conditions => {\n\t\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => \n\t\t\t\t(\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{condition.name} </label>\n\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t};\n\n\tfunction renderEditConditions(conditions) {\n\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => {\n\t\t\t\n\t\t\tif (condition.edit) {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sync-alt\"\n\t\t\t\t\t\t\t\t\tstyle={littleEditBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={condition.description}\n\t\t\t\t\t\t\t\trows={getRowHeight(condition.description)}\n\t\t\t\t\t\t\t\tonChange={areaTarget(i)}\n\t\t\t\t\t\t\t\tstyle={textarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\tstyle={editBtn}\n\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(null, i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button className=\"fas fa-times\" style={removeBtn} onClick={remove.bind(null, i)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tif ((editState || data.length === 0) && !editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\"  autoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else if (editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12 mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\" \n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'mt-5 condition-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'condition-edit mt-5'}>\n\t\t\t\t\t<Button className=\"fas fa-user-edit fa-2x\" style={{...toggleBtn, color: \"white\"}} \n\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\ttextarea = {\n\t\tresize: 'none',\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\teditBtn = { \n\t\tborder: 'none', \n\t\tbackgroundColor: 'white' \n\t},\n\tlittleEditBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: '#214c91'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\nexport function Medications({\n\tdata,\n\ttext,\n\tname,\n\ttarget,\n\tremove,\n\taddDoses,\n\teditState,\n\tformSubmit,\n\ttoggleState,\n\totherDosage,\n\tdoseChoices,\n\trenderSuggestions\n}) {\n\tconst renderDoses = (doses) => {\n\t\t\tif (!doses || otherDosage === 'Other Dose') {\n\t\t\t\treturn <Input name=\"dosage\" placeholder=\"Enter Dosage\" style={input} onChange={target} />;\n\t\t\t} else {\n\t\t\t\tconst clone = doses.includes('Other Dose') ? [ ...doses ] : doses.concat('Other Dose');\n\t\t\t\treturn (\n\t\t\t\t\t<select name=\"dosage\" style={input} onChange={target} className=\"form-control\">\n\t\t\t\t\t\t<option defaultValue>Which Dose?</option>\n\n\t\t\t\t\t\t{clone.map((dose, i) => <option key={i}>{dose}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t);\n\t\t\t}\n        },\n        \n\t\trenderMeds = meds => {\n\t\t\treturn meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{med.medication} </label>\n\t\t\t\t\t<div>{med.dosage}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t},\n\n\t    renderEditMeds = meds => {\n            return meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n                <Col key={i} size={'md-12'} classes={'form-group'}>\n                    <label style={fieldText}>\n                        {med.medication}{' '}\n                        <Button className=\"fas fa-times\" type=\"submit\" style={removeBtn} onClick={remove.bind(null, i)} />\n                    </label>\n                    <div>{med.dosage}</div>\n                </Col>\n            ));\n\t    }\n\n\tif (editState || data.length === 0) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>{name ? `${name}'s` : ''} Medications:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: '#d9534f' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-4'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Medication</label>\n\t\t\t\t\t\t\t<Button className=\"fas fa-hand-point-right\" style={littlePointBtn} onClick={addDoses} />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tname=\"medication\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\tstyle={input}\n\t\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t\t\tonBlur={addDoses}\n\t\t\t\t\t\t\t\t\tonChange={target}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-4'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Select Dosage</label>\n\t\t\t\t\t\t\t<div>{renderDoses(doseChoices)}</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-2'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" />  Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className={'form-row'}>{renderEditMeds(data)}</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'my-5 med-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>{name ? `${name}'s` : ''} Medications:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-user-edit fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'white' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderMeds(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\tlittlePointBtn = {\n\t\tborder: 'none',\n\t\tcolor: 'green',\n\t\tfloat: 'right',\n\t\tbackgroundColor: 'white'\n\t},\n\tremoveBtn = {\n\t\tbackgroundColor: 'white',\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react'\nimport { Col } from '../../components/Grid';\nimport { Input, Button } from '../../components/Forms';\n\n\nexport function NewContact({ target, toggleState, formSubmit }) {\n\n    return (\n    <div className={'my-5'}>\n        <Col size={'md-12'}>\n            <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n            onClick={toggleState} />\n        </Col>\n        <form onSubmit={formSubmit} >\n            <div className={\"form-row\"}>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact for</label>\n                    <Input name=\"contact\" \n                    placeholder=\"PCP, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Office or Business Name</label>\n                    <Input name=\"office\"\n                    placeholder=\"Vandelay Industries\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact Name</label>\n                    <Input name=\"name\" \n                    placeholder=\"Art Vandelay\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 1</label>\n                    <Input name=\"addressOne\"\n                    style={input}\n                    onChange={target} \n                    />                    </Col>\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 2</label>\n                    <Input name=\"addressTwo\"\n                    style={input}\n                    onChange={target} \n                    />                    \n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>City</label>\n                    <Input name=\"city\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>State/Providence</label>\n                    <Input name=\"state\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Zip/Postal Code</label>\n                    <Input name=\"zip\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Country</label>\n                    <Input name=\"country\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Primary Phone</label>\n                    <Input name=\"primaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"primaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Another Phone</label>\n                    <Input name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"secondaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                </div>\n                <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Fax</label>\n                    <Input name=\"fax\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Email</label>\n                    <Input name=\"email\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Website</label>\n                    <Input name=\"website\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <Col size={'md-12'}>\n            <Button className=\"btn\" style={saveBtn} \n                type=\"submit\" > <i className=\"fa fa-address-book mr-2\"/> {' '}  \n                    {' '} Save \n                </Button>\n            </Col>\n        </form>\n    </div> \n    )\n}\n\nconst cancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nsaveBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#55595c',\n    color: 'white',\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from \"react\";\nimport { Col } from \"../../components/Grid\";\nimport { NewContact } from \"../../components/NewContact\";\nimport { Input, Button } from \"../../components/Forms\";\n\nexport function Contacts({\n  data,\n  name,\n  target,\n  remove,\n  newContact,\n  toggleNew,\n  newTarget,\n  toggleState,\n  formSubmit\n}) {\n\n  const [ confirmed, isConfirmed ] = useState(false),\n\n    formatPhoneNumberLink = number => number ? number.replace(/[^\\d]/g, '') : \"\",\n  \n    getNewContact = nextContact => {\n      if (nextContact) {\n        return (\n          <NewContact\n            target={newTarget}\n            toggleState={toggleNew}\n            formSubmit={formSubmit}\n          />\n        );\n      }\n    },\n\n    confirmRemoval = i => {\n      if (confirmed) {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={{ float: \"right\" }}\n              onClick={remove.bind(null, i, () => {isConfirmed(!confirmed)})}\n            >\n              <i className=\"fas fa-user-times\"> </i> Confirm Delete\n            </Button>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fas fa-ban\" /> Cancel\n            </Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fa fa-minus\" /> Remove Contact\n            </Button>\n          </div>\n        );\n      }\n    };\n\n  function renderContacts(contacts) {\n    return contacts.map((contact, i) => {\n      if (contact.edit) {\n        return (\n          <div key={i} className={\"mt-5\"}>\n            <Col size={\"md-12\"}>\n              <Button\n                className=\"fas fa-backspace fa-2x\"\n                style={confirmed ? { ...toggleBtn, color: \"white\" } : { ...toggleBtn, color: \"#d9534f\" }}\n                onClick={toggleState.bind(null, i)}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for</label>\n                  <Input\n                    value={contact.contact}\n                    name=\"contact\"\n                    placeholder=\"Dr, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name</label>\n                  <Input\n                    value={contact.office}\n                    name=\"office\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name</label>\n                  <Input\n                    value={contact.name}\n                    name=\"name\"\n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 1</label>\n                  <Input\n                    value={contact.addressOne}\n                    name=\"addressOne\"\n                    style={input}\n                    onChange={target(i)}\n                  />{\" \"}\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 2</label>\n                  <Input\n                    value={contact.addressTwo}\n                    name=\"addressTwo\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City</label>\n                  <Input\n                    value={contact.city}\n                    name=\"city\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                  <Input\n                    value={contact.state}\n                    name=\"state\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code</label>\n                  <Input\n                    value={contact.zip}\n                    name=\"zip\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country</label>\n                  <Input\n                    value={contact.country}\n                    name=\"country\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone</label>\n                  <Input\n                    value={contact.primaryPhone}\n                    name=\"primaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.primaryExt}\n                    name=\"primaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone</label>\n                  <Input\n                    value={contact.secondaryPhone}\n                    name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.secondaryExt}\n                    name=\"secondaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax</label>\n                  <Input\n                    value={contact.fax}\n                    name=\"fax\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email</label>\n                  <Input\n                    value={contact.email}\n                    name=\"email\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website</label>\n                  <Input\n                    value={contact.website}\n                    name=\"website\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-12\"}>\n                  {confirmRemoval(i)}\n\n                  <Button\n                    className=\"btn\"\n                    style={confirmed ? { display: \"none\" } : updtBtn}\n                    onClick={toggleState.bind(null, i)}\n                  >\n                    <i className=\"fas fa-sync-alt mr-2\" />\n                    update\n                  </Button>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} className={\"mt-5 contacts-info\"}>\n            <Col size={\"md-12\"} classes={\"contacts-edit\"}>\n              <Button\n                className=\"fas fa-user-edit fa-2x\"\n                style={{...toggleBtn, color: 'white'}}\n                onClick={ ()=>{\n                  isConfirmed(false); \n                  toggleState(i)\n                }}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for:</label>\n                  <div style={fieldText}>{contact.contact}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name:</label>\n                  <div style={fieldText}>{contact.office}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name:</label>\n                  <div style={fieldText}>{contact.name}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 1:</label>\n                  <div style={fieldText}>{contact.addressOne}</div>\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 2:</label>\n                  <div style={fieldText}>{contact.addressTwo}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City:</label>\n                  <div style={fieldText}>{contact.city}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>{window.innerWidth > 992 ? 'State/Providence:' : 'State:'}</label>\n                  <div style={fieldText}>{contact.state}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code:</label>\n                  <div style={fieldText}>{contact.zip}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country:</label>\n                  <div style={fieldText}>{contact.country}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.primaryPhone)}`}>{contact.primaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.primaryExt}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.secondaryPhone)}`}>{contact.secondaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.secondaryExt}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax:</label>\n                  <div style={fieldText}>{contact.fax}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                    <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                    </div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}> \n                  <a target=\"_blank\" rel=\"noreferrer noopener\" \n                    href={`https://${contact.website}`}>{contact.website}</a>\n                  </div>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div className={\"my-5\"}>\n      <em>\n        <h5 style={{ textDecoration: \"underline\" }}>\n          Emergency or other contact Info {name ? `for ${name}` : ''}:\n        </h5>\n      </em>\n\n      {renderContacts(data)}\n\n      {getNewContact(newContact)}\n\n      <div className={\"add\"}>\n        <Button\n          className=\"btn plus\"\n          style={newContact ? { display: \"none\" } : { display: \"block\", float: 'right' }}\n          onClick={toggleNew}\n        >\n          <i className=\"fa fa-plus\" /> New Contact\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst fieldText = {\n    fontStyle: \"italic\",\n    fontWeight: \"1000\",\n\t\tpadding: '10px 10px 10px 0',\n    color: \"black\"\n  },\n  input = {\n    borderBottom: \"1px solid rgba(0, 0, 0, .2)\",\n    transition: \"all 0.30s ease-in-out\"\n  },\n  updtBtn = {\n    float: \"right\",\n    margin: \"0\",\n    backgroundColor: \"#214c91\",\n    color: \"white\"\n  },\n  toggleBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    backgroundColor: \"white\"\n  };\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { GeneralInfo } from '../../components/GeneralInfo';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport { Medications } from '../../components/Medications';\nimport { Contacts } from '../../components/Contacts';\nimport API from '../../utils/API';\n\nexport default function EHR({ location, setContext }) {\n\n/*\n    Globals\n*/ \n    let { patientId, name } = useContext(PatientContext);\n        patientId = patientId || location.state.patientId;\n  \n    const [ patient, setPatient ] = useState(patientId),\n        [generalInfo, setGeneralInfo] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n        [ contacts, setContacts ] = useState([]),\n        [ medInput, setMedInput ] = useState(''),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ editGenState, setGenState ] = useState(false),\n        [ editHealthState, setHealthState ] = useState(false),\n        [ editConditState, setConditState ] = useState(false),\n        [ editMedsState, setMedsState ] = useState(false),\n        [ conditSuggestions, setConditSuggestions ] = useState([]),\n        [ medSuggestions, setMedSuggestions ] = useState([]),\n        [ doses, setDoses ] = useState(''),\n        [ query, setQuery ] = useState(''),\n\n        forceUpdate = useForceUpdate(), \n        isInitialMount = useRef(true);\n\n/*\n    EHR Setup and Initialization\n*/ \n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {  \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [generalInfo, healthInfo, conditions, meds, contacts]);\n\n    const getPatient = async() => {\n        if (location.state.patientId === \"\") {\n            newPatient()\n        } else {\n        const { data } = await API.fetchPatient(patient)\n            setGeneralInfo(data.patientData)\n            setHealthInfo(data.healthData)\n            setConditions(data.healthConditions)\n            setMeds(data.medications)\n            setContacts(data.contacts)\n        } \n    },\n\n     //if no patient is passed in, create a new one on the server.\n    newPatient = async() => {\n        const { data: patient }  = await API.getUser(),\n            email = patient.user.email;\n   \n        const newPatient = {email, generalInfo, healthInfo, conditions, meds, contacts},\n         { data } = await API.addPatient(newPatient);\n\n        setPatient(data._id);\n        setGenState(true)\n        setHealthState(true)\n    },\n\n/*\n    State and database management\n*/ \n    updateDB = e => {\n        if(e) {\n            e.preventDefault()\n            setGenState(false)\n            setHealthState(false)\n        }\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n        \n        API.updateEHR(patient, data)\n            .catch(err => console.log(err))       \n    }\n\n    useEffect(() => {\n        const setNameInNavbar = () => {\n            let { firstName, nickname } = generalInfo,\n            name = nickname || firstName;\n    \n            setContext({ patientId: patient, name })\n        }\n        setNameInNavbar()\n    }, [generalInfo])\n\n    const onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n    \n    onConditInputChange = async e => {\n      const { value } = e.target,\n       items = await getConditionNames(value);\n\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     }\n\n     // 1/2 second delay after typing finishes before API and other code is executed.  \n     useEffect(() => {\n        const timeThisOut = setTimeout(() => setMedInput(query), 500);\n        return () => clearTimeout(timeThisOut);\n      }, [query]);\n    \n    const onMedInputChange = async e => {\n            const { name, value } = e.target; \n            setQuery({ ...query, [name]: value })\n            \n        //only run this when medication changes. ignore dosage.\n        if (name === 'medication') {\n        try {           \n        const items = await getMedNames(value)\n        let suggestions = [];\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = items.sort().filter( x => regex.test(x)).slice(0, 8)\n            } \n            setMedSuggestions({ suggestions, text: value })\n        } catch (err) {return}\n        } \n    },\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = [...contacts],\n        edit = clone[index];\n        \n        forceUpdate();\n        \n        for (let key in edit) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    }, \n     \n     onConditDescChange = index => e => {\n        const { value } = e.target,\n          clone = [...conditions];\n\n        forceUpdate();\n\n         const newDescription = {\n            name: conditions[index].name,\n            edit: conditions[index].edit,\n            createdAt: conditions[index].createdAt || Date.now(),\n            description: value\n        }\n        clone.splice(index, 1, newDescription)\n        setConditions(clone)\n    }, \n\n    toggleDescriptionEdit = index => {\n\n        const arr = conditions.reduce((acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setConditions(arr)\n    },\n\n    toggleContactEdit = index => {\n\n        const arr = contacts.reduce((acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setContacts(arr)\n    },\n\n    addCondition = async e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        let { text } = conditSuggestions;\n        setConditSuggestions([]);\n\n        if (!text) return;\n        const [ search ]  = text.split('-'),\n        { data: [ suggest ] } = await API.fetchCondition(search),\n\n        description = (suggest && suggest.shortdef) ? suggest.shortdef.join('\\n') : suggest,\n\n            newCondition = { \n                name: capitalizeWord(text), \n                description, \n                edit: false, \n                createdAt: Date.now()\n            }\n        setConditions([...conditions, newCondition])\n    },\n\n    addMeds = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        let { text } = medSuggestions;\n        if (!text) return\n        \n        try {\n           text = text.split(' ')\n\n            const newMed = {\n                medication: capitalizeWord(text[0]),\n                dosage: medInput.dosage,\n                edit : false,\n                createdAt: Date.now()\n            }\n        setMeds([...meds, newMed])\n        setDoses('')\n        setQuery('')\n        setMedSuggestions([])\n        } catch(err) {return}\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n        \n        setContacts([...contacts, newContact])\n    },\n\n    removeCondition = index => {\n        const clone = [...conditions];\n\n        clone.splice(index, 1)\n        setConditions(clone)\n    },\n\n    removeMed = index => {\n        const clone = [...meds];\n        \n        clone.splice(index, 1)\n        setMeds(clone)\n    },\n\n    removeContact = index => {\n        const clone = [...contacts];\n\n        clone.splice(index, 1)\n        setContacts(clone)\n    },\n\n/*\n    Features Management\n*/ \n    capitalizeWord = word => word.replace(/\\b[a-z]/g, char => char.toUpperCase()),\n\n    getConditionNames = async search => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0]);\n    },\n\n     getMedNames = async search => {\n        const { data: { displayTermsList} }  = await API.getMedNames(search);\n        return displayTermsList.term;  \n    },\n\n    selectSuggestedCondit = async value => {\n        setConditSuggestions({ suggestions: [], text: value })\n\n        //auto add condition when selected autocomplete value is clicked.    \n        if (!value) return;\n        \n        const [ search ]  = value.split('-'),\n            { data: [ suggest ] } = await API.fetchCondition(search),\n    \n        description = (suggest && suggest.shortdef) ? suggest.shortdef.join('\\n') : suggest,\n\n            newCondition = { \n                name: capitalizeWord(value), \n                description, \n                edit: false, \n                createdAt: Date.now()\n            }\n        setConditions([...conditions, newCondition])\n        setConditSuggestions({text: ''})\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    selectSuggestedMed = async value => {\n        setMedSuggestions({ suggestions: [], text: value })\n        \n        //populate dosage choices with suggestions when autocomplete option is clicked\n        if (!value) return;\n        try {\n            const { data: { drugGroup } } = await API.fetchMeds(value),\n              doses = drugGroup.conceptGroup[1].conceptProperties.map(({ synonym })=> synonym).filter(x => x !== '')\n           \n            setDoses(doses)\n        } catch(err) {return}\n    },\n\n    renderMedSuggestions = () => {\n        const { suggestions } = medSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map((suggestion, i) => <li onClick={() => selectSuggestedMed(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    //populate dosage choices when finger button is clicked\n    addDoses = async e => {\n        e.preventDefault();\n\n        const { text } = medSuggestions;\n        \n        if (!text) return;\n        try {\n            const { data: { drugGroup } } = await API.fetchMeds(text),\n              doses = drugGroup.conceptGroup[1].conceptProperties.map(({ synonym })=> synonym).filter(x => x !== '')\n            \n            setDoses(doses)   \n        } catch(err) {return}\n    }\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <GeneralInfo\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={toggleDescriptionEdit}\n                        remove={removeCondition}\n                        areaTarget={onConditDescChange}\n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Medications\n                        toggleState={() => setMedsState(!editMedsState)}\n                        editState={editMedsState}\n                        data={meds}\n                        target={onMedInputChange}\n                        renderSuggestions={renderMedSuggestions}\n                        text={medSuggestions.text}\n                        otherDosage={medInput.dosage}\n                        remove={removeMed}\n                        addDoses={addDoses}\n                        doseChoices={doses}\n                        formSubmit={addMeds}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Contacts\n                        toggleNew={() => setAddContact(!addContact)}\n                        toggleState={toggleContactEdit}\n                        newContact={addContact}\n                        data={contacts}\n                        target={onContactChange}\n                        remove={removeContact}\n                        newTarget={newContactInputChange}\n                        formSubmit={addNewContact}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Contacts as ForwardThis } from '../../components/Contacts';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport API from '../../utils/API';\n\n\nexport default function Contacts({ location }) {\n\n     const [ contacts, setContacts ] = useState([]),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ generalInfo, setGeneralInfo ] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n\n        forceUpdate = useForceUpdate(),\n        isInitialMount = useRef(true);\n\n        let { patientId, name } = useContext(PatientContext);\n        patientId = patientId || location.state.patientId;\n\n\n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {   \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [contacts]);\n\n    const getPatient = async() => {\n        if (!patientId) return\n       \n        const { data } = await API.fetchPatient(patientId)\n            \n        setGeneralInfo(data.patientData)\n        setHealthInfo(data.healthData)\n        setConditions(data.healthConditions)\n        setMeds(data.medications)\n        setContacts(data.contacts)\n    },\n\n    updateDB = () => { \n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n\n        API.updateEHR(patientId, data)\n            .catch(err => console.log(err))         \n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = [...contacts],\n        edit = clone[index];\n        \n        forceUpdate();\n\n        for (let key in edit) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    },\n\n    toggleContactEdit = index => {\n\n        const arr = contacts.reduce( (acc, cur, i) => {\n            cur.edit = i === index ? !cur.edit : false;\n            acc.push(cur);\n            return acc;\n        }, [])\n        setContacts(arr)\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n\n        const list = contacts.concat(newContact);\n        setContacts(list)\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n        setContacts([...clone])\n    };\n\n    return (\n        <Container>\n            <Row classes=\"my-5\">\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ForwardThis\n                    toggleNew={() => setAddContact(!addContact)}\n                    toggleState={toggleContactEdit}\n                    newContact={addContact}\n                    data={contacts}\n                    target={onContactChange}\n                    remove={removeContact}\n                    newTarget={newContactInputChange}\n                    formSubmit={addNewContact}\n                    name={name}\n                    />\n                </Col>\n             </Row>\n        </Container>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport PatientContext from '../../utils/PatientContext';\nimport { Button } from '../Forms';\nimport { Collapse } from '../Grid';\nimport Auth from '../../Auth';\n\nexport default function navBar() {\n\n    let [navLinks, showNavLinks] = useState(false),\n    history = useHistory(),\n    { pathname } = useLocation(),\n    { patientId, name } = useContext(PatientContext),\n        \n\n    // hide or show links when screen width is small\n     toggleNav = () => showNavLinks(navLinks = !navLinks),  \n\n     logout = () => Auth.logout(() => {history.push(\"/\")}),\n    \n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return (\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>\n                </li>\n                <li className={pathname === \"/patients\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/patients\" className={'nav-link'}>\n                        Saved health records\n                    </Link>\n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to={{pathname:\"/ehr\", state: { patientId, name }}} className={'nav-link'} >\n                       {name ? `${name}'s` : ''} EHR\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}}  >\n\n                    <Link to={{pathname:\"/contacts\", state: { patientId, name }}} className={'nav-link'} >\n                    {name ? `${name}'s` : ''} Contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...rest} {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Patients from \"./pages/Patients\";\nimport EHR from \"./pages/EHR\";\nimport Contacts from './pages/Contacts';\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport PatientContext from './utils/PatientContext';\nimport './assets/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nexport default function App() {\n  \n  const [ patient, setPatient ] = useState({}),\n    { Provider } = PatientContext,\n\n  setPatientContext = patient => setPatient(patient);\n\n  return (\n    <Router>\n      <Provider value={patient} >\n        <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/patients\" \n        component={Patients} \n        setContext={setPatientContext}  \n        /> \n        <ProtectedRoute exact path=\"/ehr\" \n        component={EHR} \n        setContext={setPatientContext}\n        />\n        <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      </Provider>\n    </Router>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}